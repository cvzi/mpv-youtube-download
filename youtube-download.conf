# KEY BINDINGS
#download_video_binding=ctrl+d
#download_audio_binding=ctrl+a
#download_subtitle_binding=ctrl+s
#download_video_embed_subtitle_binding=ctrl+i
#select_range_binding=ctrl+r

# Specify audio format: "best", "aac","flac", "mp3", "m4a", "opus", "vorbis", or "wav"
#audio_format=mp3

# Specify ffmpeg/avconv audio quality
# insert a value between 0 (better) and 9 (worse) for VBR or a specific bitrate like 128K
#audio_quality=0

# Same as youtube-dl --format FORMAT
# see https://github.com/ytdl-org/youtube-dl/blob/master/README.md#format-selection
# set to "current" to download the same quality that is currently playing
#video_format=best

# Encode the video to another format if necessary (currently supported: mp4|flv|ogg|webm|mkv|avi)
#recode_video="mp4"

# Restrict filenames to only ASCII characters, and avoid "&" and spaces in filenames
#restrict_filenames=yes

# Download the whole playlist (no) or only one video (yes)
# Same as youtube-dl --no-playlist
#no_playlist=no

# Use an archive file, see youtube-dl --download-archive
# You have these options:
#  * Comment out to not use an archive file
#  * Set an absolute path to use one archive for all downloads e.g. download_archive="/home/user/archive.txt"
#  * Set a relative path/only a filename to use one archive per directory e.g. download_archive="archive.txt"
#  * Use $PLAYLIST to create one archive per playlist e.g. download_archive="/home/user/archives/$PLAYLIST.txt"
#download_archive="$PLAYLIST.txt"

# Set '/:dir%mpvconf%' to use mpv config directory to download
# OR change to '/:dir%script%' for placing it in the same directory of script
# OR change to '~~/ytdl/download' for sub-path of mpv portable_config directory
# OR write any variable using '/:var', such as: '/:var%APPDATA%/mpv/ytdl/download' or '/:var%HOME%/mpv/ytdl/download'
# OR specify the absolute path, such as: "C:\\Users\\UserName\\Downloads"
#download_path=/:dir%mpvconf%/ytdl/download

# Filename format to download file
# see https://github.com/ytdl-org/youtube-dl/blob/master/README.md#output-template
# For example: "%(title)s.%(ext)s"
#filename=%(title)s.%(ext)s

# Use a cookies file for youtube-dl
# Same as youtube-dl --cookies
#cookies=C:\Users\username\cookies.txt

# Write download errors to a log file
#log_file=C:\Users\username\download.log

# Executable of youtube-dl to use, e.g. "youtube-dl", "yt-dlp" or path to the executable file
# Leave commented out to auto-detect an executable in $PATH
#youtube_dl_exe=youtube-dl

# Use a config file, see youtube-dl --config-location, instead of
# the usual options for this keyboard shortcut. This way you can
# overwrite the predefined behaviour of the keyboard shortcut and
# all of the above options with a custom download behaviour defined
# in each config file.
#download_video_config_file=C:\Users\username\video_config.txt
#download_audio_config_file=C:\Users\username\audio_config.txt
#download_subtitle_config_file=C:\Users\username\subtitle_config.txt
#download_video_embed_subtitle_config_file=C:\Users\username\embeded_config.txt

# Open a new "Windows Terminal" window/tab for download.
# This allows you to monitor the download progress.
# Currently only works on Windows with the new wt.exe terminal
# If open_new_terminal_autoclose is yes, then the terminal window
# will close after the download, even if there were errors
#open_new_terminal=no
#open_new_terminal_autoclose=no
